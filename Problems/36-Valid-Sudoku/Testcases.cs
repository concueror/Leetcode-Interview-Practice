using NUnit.Framework;
using FluentAssertions;

namespace Leetcode.Problems.DotNet._36_Valid_Sudoku;

public class Testcases
{
    [Test]
    public void Case1()
    {
        var solution = new Solution();
        var board = new char[][]
        {
            ['5','3','.','.','7','.','.','.','.'],
            ['6','.','.','1','9','5','.','.','.'],
            ['.','9','8','.','.','.','.','6','.'],
            ['8','.','.','.','6','.','.','.','3'],
            ['4','.','.','8','.','3','.','.','1'],
            ['7','.','.','.','2','.','.','.','6'],
            ['.','6','.','.','.','.','2','8','.'],
            ['.','.','.','4','1','9','.','.','5'],
            ['.','.','.','.','8','.','.','7','9']
        };
        var result = solution.IsValidSudoku(board);

        result.Should().BeTrue();
    }

    [Test]
    public void Case2()
    {
        var solution = new Solution();
        var board = new char[][]
        {
            ['8','3','.','.','7','.','.','.','.'],
            ['6','.','.','1','9','5','.','.','.'],
            ['.','9','8','.','.','.','.','6','.'],
            ['8','.','.','.','6','.','.','.','3'],
            ['4','.','.','8','.','3','.','.','1'],
            ['7','.','.','.','2','.','.','.','6'],
            ['.','6','.','.','.','.','2','8','.'],
            ['.','.','.','4','1','9','.','.','5'],
            ['.','.','.','.','8','.','.','7','9']
        };
        var result = solution.IsValidSudoku(board);

        result.Should().BeFalse();
    }
}
